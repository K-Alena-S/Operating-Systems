#include <sys/types.h> - тип time_t представляет собой typedef, определенный в <sys/types.h>
#include <stdio.h> - стандартный заголовочный файл ввода-вывода
#include <time.h> - для функций времени
#include <stdlib.h> - для putenv
 
 struct tm *sp;
Определяем указатель на struct tm 
struct tm {
    int tm_sec;   // секунды
    int tm_min;   // минуты
    int tm_hour;  // часы
    int tm_mday;  // дни
    int tm_mon;   // месяца
    int tm_year;  // года
    int tm_wday;  // дни недели
    int tm_yday;  // дней в году
    int tm_isdst; // флаг летнего времени
};

  putenv("TZ=America/Los_Angeles")
Функция putenv добавляет новые переменные окружения или изменяет значения существующих переменных окружения 
putenv возвращает 0, если она успешно отработала, -1 — ошибка. 
Переменная окружения TZ(временная зона, часовой пояс). Системные часы Unix используют Всемирное координированное время (UTC), 
которое приблизительно соответствует среднему времени по Гринвичу (Лондон).
Уставновка переменной окружения TZ.

Если произошла ошибка:
  if (result_putenv == ERROR)

  perror(string);
Функция perror печатает сообщение об ошибке. В каком формате осуществляется вывод? 
string : системное сообщение об ошибке для последнего библиотечного вызова, выработавшего ошибку, и новая строка. 
Номер действительной ошибки хранится в переменной errno. 

  time(&now);
Вызывается time и значение сохраняется в переменную now.
Значение, возвращаемое time определено как число секунд с 
0 часов 0 минут 0 секунд по UTC 1 января 1970 года
Возвращает -1 в случае неуспеха.

  ctime(&now);
ctime используется для преобразование значения time в удобный для человека формат.
Библиотечная функция ctime преобразует календарное время в ASCII-строку формата date(Month Week Day H:M:S Year). 
Адрес, возвращенный этой функцией, используется в качестве параметра printf для печати ASCII-строки

  localtime(&now);
Эта функция заполняет значениями поля структуры tm.
Функция localtime() возвращает локальное время.
localtime вызывает tzset 
(функция tzset использует текущую установку переменной окружения TZ, чтобы назначить  значения  трем  переменным:  
 daylight - ненулевое значение, если в данной TZ используется сезонное изменение времени; иначе - 0, 
 timezone - различие  между  значением  времени  по Гринвичу и местным временем,  
 tzname - текущая временная зона), 
чтобы получить значение переменной среды TZ. 
Возвращает адрес структуры tm.


Переменные окружения это переменные, определенные для текущей оболочки, они наследуются любым потомком оболочки и запущенного процесса. 
Процесс - это экземпляр исполняющейся программы вместе с данными этой
программы и набором атрибутов, хранящихся в ядре операционной системы.

------------------------------------------------------------------
------------------------------------------------------------------

1) Если putenv() завершилась неудачно, errno указывает на одну из следующих ошибок.
[EDAMAGE]
Обнаружен поврежденный объект.
Ссылочный объект поврежден. Объект нельзя использовать.

[EFAULT]
Адрес, используемый для аргумента, неверен. При попытке использовать аргумент в вызове система обнаружила недействительный адрес.
При попытке доступа к параметру, переданному этой функции, система обнаружила недействительный адрес.

[EINVAL]
Значение, указанное для аргумента, неверно. В функцию были переданы неверные значения аргументов, или была предпринята попытка выполнить операцию над объектом, 
а указанная операция не поддерживается для этого типа объекта.
Значение аргумента недопустимо, вне допустимого диапазона или равно NULL. Например, строка может иметь неправильный формат.

[ENOMEM]
Не удалось выполнить запрос на выделение хранилища.
Функция, необходимая для выделения памяти, но память недоступна.
Недостаточно памяти для выполнения запрошенной функции. (Существует ограничение в 4095 переменных среды на задание.)

[EUNKNOWN]
Неизвестное состояние системы.
Операция завершилась неудачно из-за неизвестного состояния системы. 


2) Оболочка - часть операционной среды, определяющая интерфейс пользователя,
командные и сервисные возможности пользователя по управлению прикладными программами. 

3)Если putenv вызвать после ctime, то поведение программы поменяется, так как ctime преобразовывает время с учетом TZ, 
а значение переменной меняется после вызова putenv.
